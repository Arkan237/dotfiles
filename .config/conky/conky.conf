-- Conky, a system monitor https://github.com/brndnmtthws/conky
--
-- This configuration file is Lua code. You can write code in here, and it will
-- execute when Conky loads. You can use it to generate your own advanced
-- configurations.
--
-- Try this (remove the `--`):
--
--   print("Loading Conky config")
--
-- For more on Lua, see:
-- https://www.lua.org/pil/contents.html

conky.config = {
    alignment = 'top_right',
    background = true,
    cpu_avg_samples = 2,
    default_color = 'white',
    color2 = '3a587a',
    color3 = '777777',
    default_outline_color = 'white',
    default_shade_color = 'white',
    double_buffer = true,
    draw_borders = false,
    draw_graph_borders = true,
    draw_outline = false,
    draw_shades = false,
    extra_newline = false,
    font = 'Ubuntu-R:size=12',
    gap_x = 15,
    gap_y = 45,
    minimum_height = 500,
    minimum_width = 300,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    own_window = true,
    own_window_class = 'Conky',
    own_window_type = 'override',
    own_window_transparent = true,
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 1.0,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,
}

conky.text = [[
# Clock
$alignc${font Ubuntu-M:style=Medium:size=26}${time %H:%M:%S}$font
$alignc${voffset 5}${time %A, %d %B %Y}$color
# System
${voffset 10}${color3}SYSTEM $hr
${color2}OS:$alignr $color ${exec hostnamectl | grep System | head -n 1 | cut -c 19-100}
${color2}Kernel:$alignr $color $kernel
${color2}Hostname:$alignr $color $nodename
${color2}Uptime:$alignr $color $uptime
# CPU
${voffset 10}${color3}CPU $hr
${color2}CPU Frequency: $color $alignr ${freq} MHz
${color2}CPU Temperature: $color $alignr ${exec sensors coretemp-isa-0000 | cut -c 17-23 | head -n 4 | tail -n 1}
${color2}CPU Usage (Total):$color $alignr ${offset -85} ${cpu}% $alignr ${offset -90} ${cpubar cpu0}
${color2}CPU Core 1:$color $alignr ${offset -85} ${cpu cpu1}% $alignr ${offset -90} ${cpubar cpu1}
${color2}CPU Core 2:$color $alignr ${offset -85} ${cpu cpu2}% $alignr ${offset -90} ${cpubar cpu2}
${color2}CPU Core 3:$color $alignr ${offset -85} ${cpu cpu3}% $alignr ${offset -90} ${cpubar cpu3}
${color2}CPU Core 4:$color $alignr ${offset -85} ${cpu cpu4}% $alignr ${offset -90} ${cpubar cpu4}
# RAM
${voffset 10}${color3}RAM $hr
${color2}RAM Usage: $color $alignr ${offset -85} ${memperc}% $alignr ${offset -90} $membar
${color2}Swap Usage: $color $alignr ${offset -85} ${swapperc}% $alignr ${offset -90} $swapbar
# Disk
${voffset 10}${color3}Disk $hr
${color2} / : $color $alignr ${offset -85} ${fs_used_perc}% $alignr ${offset -90} ${fs_bar /}
${color2}Disk I/O Read: $color $alignr ${offset -85} ${diskio_read} $alignr ${offset -90} ${diskiograph_read 6}
${color2}Disk I/O Write: $color $alignr ${offset -85} ${diskio_write} $alignr ${offset -90} ${diskiograph_write 6}
]]
